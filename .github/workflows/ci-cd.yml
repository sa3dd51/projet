name: Advanced CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/advanced-python-app
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }}pp

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: pytest tests/

  sonarcloud:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: .
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Snyk monitor
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  docker_build_scan_push:
    needs: [sonarcloud, snyk]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t $IMAGE_NAME:${{ github.run_number }} .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.IMAGE_NAME }}:${{ github.run_number }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true

    - name: Push image to DockerHub (Staging)
      if: env.ENVIRONMENT == 'staging'
      run: |
        docker tag $IMAGE_NAME:${{ github.run_number }} $IMAGE_NAME:staging
        docker push $IMAGE_NAME:staging

    - name: Push image to DockerHub (Production)
      if: env.ENVIRONMENT == 'prod'
      run: |
        docker tag $IMAGE_NAME:${{ github.run_number }} $IMAGE_NAME:prod
        docker push $IMAGE_NAME:prod
